{"ast":null,"code":"var _jsxFileName = \"/Users/gregbaugh/Documents/GitHub/task-manage/src/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  //Validate that there are values in the Username and Password inputs\n  const validate = values => {\n    const errors = {};\n\n    if (!values.username) {\n      errors.username = 'Required';\n    }\n\n    if (!values.password) {\n      errors.password = 'Required';\n    }\n\n    return errors;\n  }; //Hold the values from the input form\n\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  }); //Input form built with Formik\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        name: \"username\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), formik.touched.username && formik.errors.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 78\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), formik.touched.username && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 78\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formik.values.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formik.values.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/gregbaugh/Documents/GitHub/task-manage/src/LoginForm.js"],"names":["React","useFormik","LoginForm","validate","values","errors","username","password","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAChB;AACA,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACvB,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAG,CAACD,MAAM,CAACE,QAAX,EAAqB;AACjBD,MAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACH;;AACD,QAAG,CAACF,MAAM,CAACG,QAAX,EAAqB;AACjBF,MAAAA,MAAM,CAACE,QAAP,GAAkB,UAAlB;AACH;;AACD,WAAOF,MAAP;AACH,GATD,CAFgB,CAYhB;;;AACA,QAAMG,MAAM,GAAGP,SAAS,CAAC;AACrBQ,IAAAA,aAAa,EAAE;AACXH,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADM;AAKrBJ,IAAAA,QALqB;AAMrBO,IAAAA,QAAQ,EAAEN,MAAM,IAAI;AAChBO,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeT,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACH;AARoB,GAAD,CAAxB,CAbgB,CAuBhB;;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEI,MAAM,CAACM,YAAvB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AACI,QAAA,EAAE,EAAC,UADP;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAEN,MAAM,CAACO,YAJrB;AAKI,QAAA,MAAM,EAAEP,MAAM,CAACQ,UALnB;AAMI,QAAA,KAAK,EAAER,MAAM,CAACJ,MAAP,CAAcE;AANzB;AAAA;AAAA;AAAA;AAAA,cAFR,EAUaE,MAAM,CAACS,OAAP,CAAeX,QAAf,IAA2BE,MAAM,CAACH,MAAP,CAAcC,QAAzC,gBAAoD;AAAA,kBAAME,MAAM,CAACH,MAAP,CAAcC;AAApB;AAAA;AAAA;AAAA;AAAA,cAApD,GAA0F,IAVvG,eAWI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYQ;AACI,QAAA,EAAE,EAAC,UADP;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,QAAQ,EAAEE,MAAM,CAACO,YAJrB;AAKI,QAAA,MAAM,EAAEP,MAAM,CAACQ,UALnB;AAMI,QAAA,KAAK,EAAER,MAAM,CAACJ,MAAP,CAAcG;AANzB;AAAA;AAAA;AAAA;AAAA,cAZR,EAoBaC,MAAM,CAACS,OAAP,CAAeX,QAAf,IAA2BE,MAAM,CAACH,MAAP,CAAcE,QAAzC,gBAAoD;AAAA,kBAAMC,MAAM,CAACH,MAAP,CAAcE;AAApB;AAAA;AAAA;AAAA;AAAA,cAApD,GAA0F,IApBvG;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAwBI;AAAA,gBAAKC,MAAM,CAACJ,MAAP,CAAcG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAxBJ,eAyBI;AAAA,gBAAKC,MAAM,CAACJ,MAAP,CAAcE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GArDQJ,S;UAaUD,S;;;KAbVC,S;AAuDT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nfunction LoginForm(){\n    //Validate that there are values in the Username and Password inputs\n    const validate = values => {\n        const errors = {};\n        if(!values.username) {\n            errors.username = 'Required';\n        } \n        if(!values.password) {\n            errors.password = 'Required'\n        }\n        return errors;\n    }\n    //Hold the values from the input form\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        validate,\n        onSubmit: values => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n    //Input form built with Formik\n    return(\n        <div>\n            <h2>Log In</h2>\n            <form onSubmit={formik.handleSubmit}>\n                <label htmlFor=\"username\">Username</label>\n                    <input\n                        id=\"username\"\n                        name=\"username\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.username}\n                        />\n                        {formik.touched.username && formik.errors.username ? <div>{formik.errors.username}</div> : null}\n                <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                        />\n                        {formik.touched.username && formik.errors.password ? <div>{formik.errors.password}</div> : null}\n            </form>\n            <h1>{formik.values.password}</h1>\n            <h1>{formik.values.username}</h1>\n        </div>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}