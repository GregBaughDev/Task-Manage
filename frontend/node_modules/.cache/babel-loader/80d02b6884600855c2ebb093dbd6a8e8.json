{"ast":null,"code":"var _jsxFileName = \"/Users/gregbaugh/Documents/GitHub/task-manage/src/Card.js\";\nimport React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  constructor() {\n    super();\n\n    this.onClick = () => {\n      if (!this.state.isClicked) {\n        this.setState(prevState => {\n          return {\n            isClicked: !prevState.true\n          };\n        });\n        document.body.style.overflow = \"hidden\";\n      }\n    };\n\n    this.state = {\n      isClicked: false\n    };\n  }\n\n  render() {\n    const cardClass = this.state.isClicked ? \"modal-card-content\" : \"card\";\n    const divClass = this.state.isClicked ? \"modal-card\" : \"no-modal\";\n    const descClass = this.state.isClicked ? \"task-display\" : \"task-description\";\n    const buttonClass = this.state.isClicked ? \"modal-button\" : \"no-modal\";\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: this.props.task.id,\n      index: this.props.index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: divClass,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardClass,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          ref: provided.innerRef,\n          isDragging: snapshot.isDragging,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            onClick: this.onClick,\n            children: this.props.task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Date and time created: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 60\n            }, this), this.props.task.datetime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: descClass,\n            children: this.props.task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", this.props.task.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gregbaugh/Documents/GitHub/task-manage/src/Card.js"],"names":["React","Component","Draggable","Card","constructor","onClick","state","isClicked","setState","prevState","true","document","body","style","overflow","render","cardClass","divClass","descClass","buttonClass","props","task","id","index","provided","snapshot","draggableProps","dragHandleProps","innerRef","isDragging","title","datetime","description","user"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AACxBG,EAAAA,WAAW,GAAE;AACT;;AADS,SAObC,OAPa,GAOH,MAAM;AACZ,UAAG,CAAC,KAAKC,KAAL,CAAWC,SAAf,EAAyB;AACrB,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AACHF,YAAAA,SAAS,EAAE,CAACE,SAAS,CAACC;AADnB,WAAP;AAGH,SAJD;AAKAC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAA/B;AACH;AACJ,KAhBY;;AAET,SAAKR,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAaDQ,EAAAA,MAAM,GAAE;AACJ,UAAMC,SAAS,GAAG,KAAKV,KAAL,CAAWC,SAAX,GAAuB,oBAAvB,GAA8C,MAAhE;AACA,UAAMU,QAAQ,GAAG,KAAKX,KAAL,CAAWC,SAAX,GAAuB,YAAvB,GAAsC,UAAvD;AACA,UAAMW,SAAS,GAAG,KAAKZ,KAAL,CAAWC,SAAX,GAAuB,cAAvB,GAAwC,kBAA1D;AACA,UAAMY,WAAW,GAAG,KAAKb,KAAL,CAAWC,SAAX,GAAuB,cAAvB,GAAwC,UAA5D;AACA,wBACI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKa,KAAL,CAAWC,IAAX,CAAgBC,EAAxC;AACI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KADtB;AAAA,gBAES,CAACC,QAAD,EAAWC,QAAX,kBACG;AAAK,QAAA,SAAS,EAAER,QAAhB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAED,SAAhB;AAAA,aACIQ,QAAQ,CAACE,cADb;AAAA,aAEIF,QAAQ,CAACG,eAFb;AAGA,UAAA,GAAG,EAAEH,QAAQ,CAACI,QAHd;AAIA,UAAA,UAAU,EAAEH,QAAQ,CAACI,UAJrB;AAAA,kCAKI;AAAI,YAAA,OAAO,EAAE,KAAKxB,OAAlB;AAAA,sBAA4B,KAAKe,KAAL,CAAWC,IAAX,CAAgBS;AAA5C;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,+DAA2B;AAAA;AAAA;AAAA;AAAA,oBAA3B,EAAiC,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAG,YAAA,KAAK,EAAEb,SAAV;AAAA,sBAAsB,KAAKE,KAAL,CAAWC,IAAX,CAAgBW;AAAtC;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA,iCAAU,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AA7CuB;;AAgD5B,eAAe9B,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Draggable} from 'react-beautiful-dnd';\nimport './Card.css';\n\nclass Card extends Component{\n    constructor(){\n        super();\n        this.state = {\n            isClicked: false,\n        }\n    }\n\n    onClick = () => {\n        if(!this.state.isClicked){\n            this.setState(prevState => {\n                return {\n                    isClicked: !prevState.true,\n                }\n            })\n            document.body.style.overflow = \"hidden\";\n        }\n    }\n\n    render(){\n        const cardClass = this.state.isClicked ? \"modal-card-content\" : \"card\";\n        const divClass = this.state.isClicked ? \"modal-card\" : \"no-modal\";\n        const descClass = this.state.isClicked ? \"task-display\" : \"task-description\";\n        const buttonClass = this.state.isClicked ? \"modal-button\" : \"no-modal\"\n        return(\n            <Draggable draggableId={this.props.task.id}\n                index={this.props.index}>\n                    {(provided, snapshot) => (\n                        <div className={divClass}>\n                            <div className={cardClass} \n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                            isDragging={snapshot.isDragging}>\n                                <h4 onClick={this.onClick}>{this.props.task.title}</h4>\n                                <hr></hr>\n                                <h5>Date and time created: <br/>{this.props.task.datetime}</h5>\n                                <p class={descClass}>{this.props.task.description}</p>\n                                <p>User: {this.props.task.user}</p>\n                                <button>Close</button>\n                            </div>\n                        </div>\n                    )}\n                </Draggable>\n        )\n    }\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}