{"ast":null,"code":"var _jsxFileName = \"/Users/gregbaugh/Documents/GitHub/task-manage/src/Card.js\";\nimport React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  constructor() {\n    super();\n\n    this.onClick = () => {\n      if (!this.state.isClicked) {\n        this.setState(prevState => {\n          return {\n            isClicked: false\n          };\n        });\n      } else if (this.state.isClicked) {\n        this.setState(prevState => {\n          return {\n            isClicked: true\n          };\n        });\n      }\n    };\n\n    this.state = {\n      isClicked: false\n    };\n  }\n\n  render() {\n    const divClass = this.state.isClicked ? \"testcard\" : \"card\";\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: this.props.task.id,\n      index: this.props.index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: divClass,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        ref: provided.innerRef,\n        isDragging: snapshot.isDragging,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          onClick: this.onClick,\n          children: this.props.task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Date and time created: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 56\n          }, this), this.props.task.datetime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", this.props.task.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"task-description\",\n          children: this.props.task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gregbaugh/Documents/GitHub/task-manage/src/Card.js"],"names":["React","Component","Draggable","Card","constructor","onClick","state","isClicked","setState","prevState","render","divClass","props","task","id","index","provided","snapshot","draggableProps","dragHandleProps","innerRef","isDragging","title","datetime","user","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AACxBG,EAAAA,WAAW,GAAE;AACT;;AADS,SAObC,OAPa,GAOH,MAAM;AACZ,UAAG,CAAC,KAAKC,KAAL,CAAWC,SAAf,EAAyB;AACrB,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAM;AACFF,YAAAA,SAAS,EAAE;AADT,WAAN;AAGH,SAJD;AAKH,OAND,MAMO,IAAI,KAAKD,KAAL,CAAWC,SAAf,EAA0B;AAC7B,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAM;AACFF,YAAAA,SAAS,EAAE;AADT,WAAN;AAGH,SAJD;AAKH;AACJ,KArBY;;AAET,SAAKD,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAkBDG,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,SAAX,GAAuB,UAAvB,GAAoC,MAArD;AACA,wBACI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWC,IAAX,CAAgBC,EAAxC;AACI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KADtB;AAAA,gBAES,CAACC,QAAD,EAAWC,QAAX,kBACG;AAAK,QAAA,SAAS,EAAEN,QAAhB;AAAA,WACIK,QAAQ,CAACE,cADb;AAAA,WAEIF,QAAQ,CAACG,eAFb;AAGA,QAAA,GAAG,EAAEH,QAAQ,CAACI,QAHd;AAIA,QAAA,UAAU,EAAEH,QAAQ,CAACI,UAJrB;AAAA,gCAKI;AAAI,UAAA,OAAO,EAAE,KAAKhB,OAAlB;AAAA,oBAA4B,KAAKO,KAAL,CAAWC,IAAX,CAAgBS;AAA5C;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,6DAA2B;AAAA;AAAA;AAAA;AAAA,kBAA3B,EAAiC,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,+BAAU,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAG,UAAA,KAAK,EAAC,kBAAT;AAAA,oBAA6B,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY;AAA7C;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA5CuB;;AA+C5B,eAAetB,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Draggable} from 'react-beautiful-dnd';\nimport './Card.css';\n\nclass Card extends Component{\n    constructor(){\n        super();\n        this.state = {\n            isClicked: false,\n        }\n    }\n\n    onClick = () => {\n        if(!this.state.isClicked){\n            this.setState(prevState => {\n                return{\n                    isClicked: false\n                }\n            })\n        } else if (this.state.isClicked) {\n            this.setState(prevState => {\n                return{\n                    isClicked: true\n                }\n            })\n        }\n    }\n\n    render(){\n        const divClass = this.state.isClicked ? \"testcard\" : \"card\";\n        return(\n            <Draggable draggableId={this.props.task.id}\n                index={this.props.index}>\n                    {(provided, snapshot) => (\n                        <div className={divClass} \n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}>\n                            <h4 onClick={this.onClick}>{this.props.task.title}</h4>\n                            <hr></hr>\n                            <h5>Date and time created: <br/>{this.props.task.datetime}</h5>\n                            <p>User: {this.props.task.user}</p>\n                            <p class=\"task-description\">{this.props.task.description}</p>\n                        </div>\n                    )}\n                </Draggable>\n        )\n    }\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}