{"ast":null,"code":"var _jsxFileName = \"/Users/gregbaugh/Documents/GitHub/task-manage/src/TaskPage.js\";\nimport React, { Component } from 'react';\nimport initialData from './initial-data';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport CardHolder from './CardHolder';\nimport NewCard from './NewCard';\nimport logo from './img/TMlogo.png';\nimport './TaskPage.css'; // import './NewCard.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TaskPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialData;\n\n    this.onClick = e => {\n      if (e.target.innerText === \"New Task\") {\n        this.newTask();\n      }\n    };\n\n    this.newTask = () => {\n      this.setState(prevState => {\n        return {\n          newCard: !prevState.newCard\n        };\n      });\n    };\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      ;\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      ;\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[destination.droppableId];\n\n      if (start === finish) {\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = { ...start,\n          taskIds: newTaskIds\n        };\n        const newState = { ...this.state,\n          columns: { ...this.state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      } //Moving card to another column\n\n\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = { ...start,\n        taskIds: startTaskIds\n      };\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = { ...finish,\n        taskIds: finishTaskIds\n      };\n      const newState = { ...this.state,\n        columns: { ...this.state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        className: this.state.newCard ? \"modal-card\" : null,\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"head-logo\",\n            alt: \"Task Manage logo\",\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.onClick,\n              children: \"New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"outer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"holder-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"head-item\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Submitted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"head-item\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"In Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"head-item\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"QA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"head-item\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Complete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: this.onDragEnd,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"holder-main\",\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: this.state.columnOrder.map(columnId => {\n                    const column = this.state.columns[columnId];\n                    const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n                    return /*#__PURE__*/_jsxDEV(CardHolder, {\n                      column: column,\n                      tasks: tasks\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 52\n                    }, this);\n                  })\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.newCard ? \"modal-card\" : \"no-display\",\n            children: /*#__PURE__*/_jsxDEV(NewCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default TaskPage;","map":{"version":3,"sources":["/Users/gregbaugh/Documents/GitHub/task-manage/src/TaskPage.js"],"names":["React","Component","initialData","DragDropContext","CardHolder","NewCard","logo","TaskPage","state","onClick","e","target","innerText","newTask","setState","prevState","newCard","onDragEnd","result","destination","source","draggableId","droppableId","index","start","columns","finish","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","startTaskIds","newStart","finishTaskIds","newFinish","render","columnOrder","map","columnId","column","tasks","taskId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport initialData from './initial-data';\nimport {DragDropContext} from 'react-beautiful-dnd';\nimport CardHolder from './CardHolder';\nimport NewCard from './NewCard';\nimport logo from './img/TMlogo.png';\nimport './TaskPage.css';\n// import './NewCard.css';\n\nclass TaskPage extends Component {\n    state = initialData;\n\n    onClick = (e) => {\n        if(e.target.innerText === \"New Task\"){\n            this.newTask();\n        }\n    }\n\n    newTask = () => {\n        this.setState((prevState) => {\n            return {\n                newCard: !prevState.newCard,\n            }\n        })\n    }\n\n    onDragEnd = result => {\n        const {destination, source, draggableId} = result;\n\n        if(!destination){\n            return;\n        };\n\n        if(destination.droppableId === source.droppableId &&\n            destination.index === source.index){\n                return;\n            };\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        if(start === finish){\n            const newTaskIds = Array.from(start.taskIds);\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n\n        const newColumn = {\n            ...start,\n            taskIds: newTaskIds,\n        };\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newColumn.id]: newColumn,\n            },\n        };\n        this.setState(newState);\n        return;\n    }\n    //Moving card to another column\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            taskIds: startTaskIds,\n        };\n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds,\n        };\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            },\n        };\n        this.setState(newState);\n    }\n\n    render(){\n        return(\n            <>\n            <body className={this.state.newCard ? \"modal-card\" : null}>\n            <header>\n                <img className=\"head-logo\" alt=\"Task Manage logo\" src={logo}></img>\n                <h2>Tasks</h2>\n                <div>\n                    <button onClick={this.onClick}>New Task</button>\n                    <button>Log Out</button>\n                </div>\n            </header>\n            <div id=\"outer\">\n                <div className=\"card-holder\">\n                    <div className=\"holder-header\">\n                        <div className=\"head-item\">\n                            <h3>Submitted</h3> \n                        </div>\n                        <div className=\"head-item\">\n                            <h3>In Progress</h3>\n                        </div>\n                        <div className=\"head-item\">\n                            <h3>QA</h3> \n                        </div>\n                        <div className=\"head-item\">\n                            <h3>Complete</h3>\n                        </div> \n                    </div>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <div className=\"holder-main\">\n                                <>\n                                    {this.state.columnOrder.map(columnId => {\n                                        const column = this.state.columns[columnId];\n                                        const tasks = column.taskIds.map(taskId => \n                                            this.state.tasks[taskId])\n                                            return <CardHolder key={column.id} column={column} tasks={tasks} />;\n                                    })}\n                                </>\n                        </div>\n                    </DragDropContext>\n                </div>\n                <div className={this.state.newCard ? \"modal-card\" : \"no-display\"}>\n                    <NewCard />\n                </div>\n            </div>\n            </body>\n            </>\n        );\n    }\n}\n\nexport default TaskPage;"]},"metadata":{},"sourceType":"module"}