{"ast":null,"code":"var _jsxFileName = \"/Users/gregbaugh/Documents/GitHub/task-manage/frontend/src/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport TaskPage from './TaskPage';\nimport logo from './img/TMlogo.png';\nimport './Login.css';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  //Validate that there are values in the Username and Password inputs\n  const validate = values => {\n    const errors = {};\n\n    if (!values.username) {\n      errors.username = 'Username required';\n    }\n\n    if (!values.password) {\n      errors.password = 'Password required';\n    }\n\n    return errors;\n  }; //Hold the values from the input form\n\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validate,\n    onSubmit: values => {\n      values.username === 'user' && values.password === 'user' ? console.log('correct') : console.log('incorrect');\n    }\n  });\n  const userValidation = formik.errors.username;\n  const passValidation = formik.errors.password; //Input form built with Formik\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-banner\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"head-logo\",\n          alt: \"Task Manage logo\",\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logFormHolder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"username\",\n                name: \"username\",\n                type: \"text\",\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                value: formik.values.username,\n                placeholder: formik.touched.username && formik.errors.username ? userValidation : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"password\",\n                name: \"password\",\n                type: \"password\",\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                value: formik.values.password,\n                placeholder: formik.touched.password && formik.errors.password ? passValidation : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/gregbaugh/Documents/GitHub/task-manage/frontend/src/LoginForm.js"],"names":["React","useFormik","Route","BrowserRouter","Router","TaskPage","logo","LoginForm","validate","values","errors","username","password","formik","initialValues","onSubmit","console","log","userValidation","passValidation","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\nimport TaskPage from './TaskPage';\nimport logo from './img/TMlogo.png';\nimport './Login.css';\nimport './LoginForm.css';\n\nfunction LoginForm(){\n    //Validate that there are values in the Username and Password inputs\n    const validate = values => {\n        const errors = {};\n        if(!values.username) {\n            errors.username = 'Username required';\n        } \n        if(!values.password) {\n            errors.password = 'Password required'\n        }\n        return errors;\n    }\n    //Hold the values from the input form\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        validate,\n        onSubmit: values => {\n            values.username === 'user' && values.password === 'user' ? console.log('correct') : console.log('incorrect')\n        }\n    });\n\n    const userValidation = formik.errors.username;\n    const passValidation = formik.errors.password;\n    //Input form built with Formik\n    return(\n        <Router>\n            <div>\n            <div className=\"head-banner\">\n                <img className=\"head-logo\" alt=\"Task Manage logo\" src={logo}></img>\n            </div>\n            <div className=\"logFormHolder\">\n                <div className=\"logForm\">\n                    <h2>Log In</h2>\n                        <form onSubmit={formik.handleSubmit}>\n                            <div className=\"formItem\">\n                                <label htmlFor=\"username\">Username</label>\n                                    <input\n                                        id=\"username\"\n                                        name=\"username\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        onBlur={formik.handleBlur}\n                                        value={formik.values.username}\n                                        placeholder={formik.touched.username && formik.errors.username ? userValidation : null}\n                                        />\n                            </div>\n                            <div className=\"formItem\">\n                                <label htmlFor=\"password\">Password</label>\n                                    <input\n                                        id=\"password\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        onChange={formik.handleChange}\n                                        onBlur={formik.handleBlur}\n                                        value={formik.values.password}\n                                        placeholder={formik.touched.password && formik.errors.password ? passValidation : null}\n                                        />\n                            </div>\n                            <button type=\"submit\">Submit</button>\n                        {/* <button type=\"submit\">New User</button> */}\n                        </form>\n                    </div>\n                </div>\n            </div>  \n        </Router>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}