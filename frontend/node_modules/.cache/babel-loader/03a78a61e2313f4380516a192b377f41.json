{"ast":null,"code":"var _jsxFileName = \"/Users/gregbaugh/Documents/GitHub/task-manage/src/LoginForm.js\";\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.validate = values => {\n      const errors = {};\n\n      if (!values.username) {\n        errors.username = 'Username required';\n      }\n\n      if (!values.password) {\n        errors.password = 'Password required';\n      }\n\n      return errors;\n    };\n\n    this.formik = useFormik({\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      validate,\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n      }\n    });\n    this.userValidation = formik.errors.username;\n    this.passValidation = formik.errors.password;\n  }\n\n  //Input form built with Formik\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logFormHolder\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"username\",\n              name: \"username\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              value: formik.values.username,\n              placeholder: formik.touched.username && formik.errors.username ? userValidation : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              value: formik.values.password,\n              placeholder: formik.touched.password && formik.errors.password ? passValidation : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onClick,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"New User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/gregbaugh/Documents/GitHub/task-manage/src/LoginForm.js"],"names":["React","Component","Route","BrowserRouter","Router","useFormik","LoginForm","validate","values","errors","username","password","formik","initialValues","onSubmit","alert","JSON","stringify","userValidation","passValidation","render","handleSubmit","handleChange","handleBlur","touched","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,aAAa,IAAIC,MAAhC,QAA6C,kBAA7C;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAiC;AAAA;AAAA;;AAAA,SAE7BM,QAF6B,GAElBC,MAAM,IAAI;AACjB,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAG,CAACD,MAAM,CAACE,QAAX,EAAqB;AACjBD,QAAAA,MAAM,CAACC,QAAP,GAAkB,mBAAlB;AACH;;AACD,UAAG,CAACF,MAAM,CAACG,QAAX,EAAqB;AACjBF,QAAAA,MAAM,CAACE,QAAP,GAAkB,mBAAlB;AACH;;AACD,aAAOF,MAAP;AACH,KAX4B;;AAAA,SAa7BG,MAb6B,GAapBP,SAAS,CAAC;AACfQ,MAAAA,aAAa,EAAE;AACXH,QAAAA,QAAQ,EAAE,EADC;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OADA;AAKfJ,MAAAA,QALe;AAMfO,MAAAA,QAAQ,EAAEN,MAAM,IAAI;AAChBO,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeT,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACH;AARc,KAAD,CAbW;AAAA,SAwB7BU,cAxB6B,GAwBZN,MAAM,CAACH,MAAP,CAAcC,QAxBF;AAAA,SAyB7BS,cAzB6B,GAyBZP,MAAM,CAACH,MAAP,CAAcE,QAzBF;AAAA;;AA0B7B;AACAS,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ;AAAM,UAAA,QAAQ,EAAER,MAAM,CAACS,YAAvB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEQ;AACI,cAAA,EAAE,EAAC,UADP;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,IAAI,EAAC,MAHT;AAII,cAAA,QAAQ,EAAET,MAAM,CAACU,YAJrB;AAKI,cAAA,MAAM,EAAEV,MAAM,CAACW,UALnB;AAMI,cAAA,KAAK,EAAEX,MAAM,CAACJ,MAAP,CAAcE,QANzB;AAOI,cAAA,WAAW,EAAEE,MAAM,CAACY,OAAP,CAAed,QAAf,IAA2BE,MAAM,CAACH,MAAP,CAAcC,QAAzC,GAAoDQ,cAApD,GAAqE;AAPtF;AAAA;AAAA;AAAA;AAAA,oBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEQ;AACI,cAAA,EAAE,EAAC,UADP;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,IAAI,EAAC,UAHT;AAII,cAAA,QAAQ,EAAEN,MAAM,CAACU,YAJrB;AAKI,cAAA,MAAM,EAAEV,MAAM,CAACW,UALnB;AAMI,cAAA,KAAK,EAAEX,MAAM,CAACJ,MAAP,CAAcG,QANzB;AAOI,cAAA,WAAW,EAAEC,MAAM,CAACY,OAAP,CAAeb,QAAf,IAA2BC,MAAM,CAACH,MAAP,CAAcE,QAAzC,GAAoDQ,cAApD,GAAqE;AAPtF;AAAA;AAAA;AAAA;AAAA,oBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAyBA;AAAQ,YAAA,OAAO,EAAE,KAAKM,OAAtB;AAA+B,YAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBA,eA0BA;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AA/D4B;;AAkEjC,eAAenB,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport './LoginForm.css';\n\nclass LoginForm extends Component{\n    //Validate that there are values in the Username and Password inputs\n    validate = values => {\n        const errors = {};\n        if(!values.username) {\n            errors.username = 'Username required';\n        } \n        if(!values.password) {\n            errors.password = 'Password required'\n        }\n        return errors;\n    }\n    //Hold the values from the input form\n    formik = useFormik({\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        validate,\n        onSubmit: values => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n    userValidation = formik.errors.username;\n    passValidation = formik.errors.password;\n    //Input form built with Formik\n    render(){\n        return(\n            <div className=\"logFormHolder\">\n                <div className=\"logForm\">\n                    <h2>Log In</h2>\n                        <form onSubmit={formik.handleSubmit}>\n                            <div className=\"formItem\">\n                                <label htmlFor=\"username\">Username</label>\n                                    <input\n                                        id=\"username\"\n                                        name=\"username\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        onBlur={formik.handleBlur}\n                                        value={formik.values.username}\n                                        placeholder={formik.touched.username && formik.errors.username ? userValidation : null}\n                                        />\n                            </div>\n                            <div className=\"formItem\">\n                                <label htmlFor=\"password\">Password</label>\n                                    <input\n                                        id=\"password\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        onChange={formik.handleChange}\n                                        onBlur={formik.handleBlur}\n                                        value={formik.values.password}\n                                        placeholder={formik.touched.password && formik.errors.password ? passValidation : null}\n                                        />\n                            </div>\n                        <button onClick={this.onClick} type=\"submit\">Submit</button>\n                        <button type=\"submit\">New User</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}